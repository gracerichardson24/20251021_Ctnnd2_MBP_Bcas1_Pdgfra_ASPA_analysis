---
title: "Pdgfra"
format: html
---

```{r}
#packages
if(!require(lsmeans)){install.packages("lsmeans")}
if(!require(multcompView)){install.packages("multcompView")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(rcompanion)){install.packages("ggprism")}

library(tidyverse)
library(stringr)
library(car)
library(FSA)
library(ggpubr)
library(ggbeeswarm)
library(ggprism)
library(ragg)

if(!require(psych)){install.packages("psych")}
if(!require(FSA)){install.packages("FSA")}
if(!require(lattice)){install.packages("lattice")}
if(!require(lsr)){install.packages("lsr")}
```

```{r}
#reading in csv files and cleaning

Section_data_Pdgfra <- read.csv("DATA/Pdgfra/PdgfraImagedata_20250917_CTNND2_ASTRO_oligstain_juvenile_set2_ASPA_Pdgfra.csv")

#adding column for Animal, Sex, GT, slice, hemisphere

Section_data_Pdgfra <- Section_data_Pdgfra %>%
  mutate(
    Animal = str_extract(Image, "_\\d{6}_") %>%
                str_replace_all("_", ""),
    Sex = str_extract(Image, "_[FM]_") %>%
             str_replace_all("_", ""),
    Genotype = str_extract(Image, "_(WT|KO)_") %>% 
      str_replace_all("_", ""),
    Slice = str_extract(Image, "s\\d+") %>%
      str_replace("s", ""),
    Hemisphere = str_extract(Image, "h\\d+") %>%
      str_replace("h", "")
  )



Detections_data_Pdgfra <- read.csv("DATA/Pdgfra/PdgfraCelldata_20250917_CTNND2_ASTRO_oligstain_juvenile_set2_ASPA_Pdgfra.csv")

#adding column for Animal, Sex, GT, slice, hemisphere

Detections_data_Pdgfra <- Detections_data_Pdgfra %>%
  mutate(
    Animal = str_extract(Image, "_\\d{6}_") %>%
                str_replace_all("_", ""),
    Sex = str_extract(Image, "_[FM]_") %>%
             str_replace_all("_", ""),
    Genotype = str_extract(Image, "_(WT|KO)_") %>% 
      str_replace_all("_", ""),
    Slice = str_extract(Image, "s\\d+") %>%
      str_replace("s", ""),
    Hemisphere = str_extract(Image, "h\\d+") %>%
      str_replace("h", "")
  )
```

```{r}
#reading in csv files and cleaning

Section_data_ASPA <- read.csv("DATA/ASPA/ASPAImagedata_20250917_CTNND2_ASTRO_oligstain_juvenile_set2_ASPA_Pdgfra.csv")

#adding column for Animal, Sex, GT, slice, hemisphere

Section_data_ASPA <- Section_data_ASPA %>%
  mutate(
    Animal = str_extract(Image, "_\\d{6}_") %>%
                str_replace_all("_", ""),
    Sex = str_extract(Image, "_[FM]_") %>%
             str_replace_all("_", ""),
    Genotype = str_extract(Image, "_(WT|KO)_") %>% 
      str_replace_all("_", ""),
    Slice = str_extract(Image, "s\\d+") %>%
      str_replace("s", ""),
    Hemisphere = str_extract(Image, "h\\d+") %>%
      str_replace("h", "")
  )



Detections_data_ASPA <- read.csv("DATA/ASPA/ASPACelldata_20250917_CTNND2_ASTRO_oligstain_juvenile_set2_ASPA_Pdgfra.csv")

#adding column for Animal, Sex, GT, slice, hemisphere

Detections_data_ASPA <- Detections_data_ASPA %>%
  mutate(
    Animal = str_extract(Image, "_\\d{6}_") %>%
                str_replace_all("_", ""),
    Sex = str_extract(Image, "_[FM]_") %>%
             str_replace_all("_", ""),
    Genotype = str_extract(Image, "_(WT|KO)_") %>% 
      str_replace_all("_", ""),
    Slice = str_extract(Image, "s\\d+") %>%
      str_replace("s", ""),
    Hemisphere = str_extract(Image, "h\\d+") %>%
      str_replace("h", "")
  )
```

```{r}
combined_ASPAPdgra <- full_join(
  Section_data_ASPA,
  Section_data_Pdgfra,
  by = c("Animal", "Name", "Sex", "Image", "Object.type", "Num.Detections", "Genotype", "Slice", "Hemisphere")
)

combined_ASPAPdgra <- combined_ASPAPdgra |>
  mutate(
    `ASPA/total` = (Num.ASPA./Num.Detections),
    PercentASPA = `ASPA/total` * 100,
    `Pdgfra/total` = (Num.Pdgfra./Num.Detections),
    PercentPdgfra = `Pdgfra/total` * 100,
    `ASPA+/Pdgfra-` = Num.ASPA./Num.Pdgfra..1,
    `ASPA+/Pdgfra+` = Num.ASPA./Num.Pdgfra.,
    `ASPA-/Pdgfra+` = Num.ASPA..1/Num.Pdgfra.,
    `ASPA-/Pdgfra-` = Num.ASPA..1/Num.Pdgfra..1
  )

combined_ASPAPdgra <- combined_ASPAPdgra |>
  group_by(Animal, Sex, Genotype) |>
  summarise(
    Num.Pdgfra. = mean(Num.Pdgfra.),
    Num.Pdgfra..1 = mean(Num.Pdgfra..1),
    Num.ASPA. = mean(Num.ASPA.),
    Num.ASPA.1 = mean(Num.ASPA..1),
    Num.Detections = mean(Num.Detections),
    `ASPA/total` = mean(`ASPA/total`),
    `Pdgfra/total` = mean(`Pdgfra/total`),
    `ASPA+/Pdgfra-` = mean(`ASPA+/Pdgfra-`),
    `ASPA+/Pdgfra+` = mean(`ASPA+/Pdgfra+`),
    `ASPA-/Pdgfra+` = mean(`ASPA-/Pdgfra+`),
    `ASPA-/Pdgfra-` = mean(`ASPA-/Pdgfra-`)
  )

```

```{r}

```

```{r}


```

```{r}

```

```{r}
Detections_data_ASPA$ASPA <- ifelse(Detections_data_ASPA$Classification == "ASPA+", 1, 0)
Detections_data_Pdgfra$Pdgfra <- ifelse(Detections_data_Pdgfra$Classification == "Pdgfra+", 1, 0)

combined_detections_ASPAPdgra <- full_join(
  Detections_data_ASPA,
  Detections_data_Pdgfra,
  by = c("Animal", "Image", "Sex", "Centroid.Y.µm", "Genotype", "Slice", "Hemisphere")
)

combined_detections_ASPAPdgra <- combined_detections_ASPAPdgra %>%
  mutate(
    Pdgfra_pos_ASPA_pos = ifelse(Pdgfra == 1 & ASPA == 1, 1, 0),
    Pdgfra_pos_ASPA_neg = ifelse(Pdgfra == 1 & ASPA == 0, 1, 0),
    Pdgfra_neg_ASPA_pos = ifelse(Pdgfra == 0 & ASPA == 1, 1, 0),
    Pdgfra_neg_ASPA_neg = ifelse(Pdgfra == 0 & ASPA == 0, 1, 0)
  )

combined_detections_ASPAPdgra <- combined_detections_ASPAPdgra |>
  group_by(Animal, Sex, Genotype) |>
  summarise(
    Total_cells = n(),
    ASPA = sum(ASPA, na.rm = TRUE),
    Pdgfra = sum(Pdgfra, na.rm = TRUE),
    max_value = max(Centroid.Y.µm, na.rm = TRUE),
    Pdgfra_pos_ASPA_pos = sum(Pdgfra_pos_ASPA_pos, na.rm = TRUE),
    Pdgfra_pos_ASPA_neg = sum(Pdgfra_pos_ASPA_neg, na.rm = TRUE),
    Pdgfra_neg_ASPA_pos = sum(Pdgfra_neg_ASPA_pos, na.rm = TRUE),
    Pdgfra_neg_ASPA_neg = sum(Pdgfra_neg_ASPA_neg, na.rm = TRUE)
  )

combined_detections_ASPAPdgra <- combined_detections_ASPAPdgra %>%
  filter(!(Pdgfra_pos_ASPA_pos == 0 &
           Pdgfra_pos_ASPA_neg == 0 &
           Pdgfra_neg_ASPA_pos == 0 &
           Pdgfra_neg_ASPA_neg == 0))
```

```{r}
summary_combined_detections_ASPAPdgra <- combined_detections_ASPAPdgra %>%
  mutate(
    prop_Pdgfra_pos_ASPA_pos = (Pdgfra_pos_ASPA_pos / Total_cells) * 100,
    prop_Pdgfra_pos_ASPA_neg = (Pdgfra_pos_ASPA_neg / Total_cells) * 100,
    prop_Pdgfra_neg_ASPA_pos = (Pdgfra_neg_ASPA_pos / Total_cells) * 100,
    prop_Pdgfra_neg_ASPA_neg = (Pdgfra_neg_ASPA_neg / Total_cells) * 100,
    Area = (max_value*879.1)*(500*879.1),
    Pdgfra_per_area = Pdgfra/Area,
    ASPA_per_area = ASPA/Area,
    Pdgfra_pos_ASPA_pos_per_area = Pdgfra_pos_ASPA_pos / Area,
    Pdgfra_pos_ASPA_neg_per_area = Pdgfra_pos_ASPA_neg / Area,
    Pdgfra_neg_ASPA_pos_per_area = Pdgfra_neg_ASPA_pos / Area,
    Pdgfra_neg_ASPA_neg_per_area = Pdgfra_neg_ASPA_neg / Area,
    Olig2_per_area = Total_cells / Area
  )

```

```{r}
#ASPA
#arcsin(sqrt) stretches out values near 0 and compresses values near 1, stabilizes variance for proportion analysis

#t-test on Olig2/area
t.test(Olig2_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)

#t-test on ASPA+/area
t.test(ASPA_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)

#Pdgfra

t.test(Pdgfra_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)

```

```{r}
t.test(Pdgfra_pos_ASPA_pos_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)
t.test(Pdgfra_pos_ASPA_neg_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)
t.test(Pdgfra_neg_ASPA_pos_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)
t.test(Pdgfra_neg_ASPA_neg_per_area ~ Genotype, data = summary_combined_detections_ASPAPdgra)
```

```{r}
summary_combined_detections_ASPAPdgra <- summary_combined_detections_ASPAPdgra %>%
  rename(ASPA_per_area = `ASPA_per_area`)

summary_stats <- summary_combined_detections_ASPAPdgra %>%
  group_by(Genotype) %>%
  summarise(
    MeanCount = mean(ASPA_per_area, na.rm = TRUE),
    SEM = sd(ASPA_per_area, na.rm = TRUE)/sqrt(n()),
    .groups = 'drop'
  )

ggplot(summary_combined_detections_ASPAPdgra, aes(x = Genotype, y = ASPA_per_area)) +
  geom_col(data = summary_stats, aes(y = MeanCount, fill = Genotype), alpha = 0.4) +
  geom_errorbar(
    data = summary_stats,
    aes(x = Genotype, ymin = MeanCount - SEM, ymax = MeanCount + SEM),
    width = 0.2,
    color = "black",
    inherit.aes = FALSE
  ) +
  geom_jitter(aes(color = Genotype), width = 0.2, size = 2, alpha = 0.9) +
  theme_minimal() +
  xlab("") +
  ylab("Proportion ASPA+ Cells") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  scale_fill_manual(values = c("darkblue", "lightblue")) +
  scale_color_manual(values = c("darkblue", "lightblue"))
```

```{r}
combined_ASPAPdgra_clean <- combined_ASPAPdgra_clean %>%
  rename(Pdgfra_total = `Pdgfra/total`)

summary_stats <- combined_ASPAPdgra_clean %>%
  group_by(Genotype) %>%
  summarise(
    MeanCount = mean(Pdgfra_total, na.rm = TRUE),
    SEM = sd(Pdgfra_total, na.rm = TRUE)/sqrt(n()),
    .groups = 'drop'
  )

ggplot(combined_ASPAPdgra_clean, aes(x = Genotype, y = Pdgfra_total)) +
  geom_col(data = summary_stats, aes(y = MeanCount, fill = Genotype), alpha = 0.4) +
  geom_errorbar(
    data = summary_stats,
    aes(x = Genotype, ymin = MeanCount - SEM, ymax = MeanCount + SEM),
    width = 0.2,
    color = "black",
    inherit.aes = FALSE
  ) +
  geom_jitter(aes(color = Genotype), width = 0.2, size = 2, alpha = 0.9) +
  theme_minimal() +
  xlab("") +
  ylab("Proportion Pdgfra+ Cells") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  scale_fill_manual(values = c("darkblue", "lightblue")) +
  scale_color_manual(values = c("darkblue", "lightblue"))
```
